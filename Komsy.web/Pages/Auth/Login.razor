@page "/Login"
@layout LogOutLayout

@inherits LoginPage;

<MudContainer MaxWidth="MaxWidth.Small">
  <MudCard>

    <MudCardHeader class="justify-center">

      <MudText Typo="Typo.h4" Color="Color.Primary">@Lang.GetText(TextEnum.LogIn)
      </MudText>
    </MudCardHeader>

    <MudCardContent>
      <MudForm ref="@LoginFrm" Model="@LoginModel">
        <MudTextField Label="@Lang.GetText(TextEnum.Email)" @bind-Value="@LoginModel.Email"
          AdornmentIcon="@Icons.Material.Filled.Person" Adornment="Adornment.End" FullWidth="false"
          Validation=@(LoginValidator.ValidateValue) For="(() =>  LoginModel.Email)">
        </MudTextField>

        <MudTextField Label="@Lang.GetText(TextEnum.Password)" @bind-Value="@LoginModel.Password"
          AdornmentIcon="@Icons.Material.Filled.Lock" Adornment="Adornment.End" FullWidth="false" Required="true"
          InputType="@PasswordInput" Validation=@(LoginValidator.ValidateValue) For="(() =>  LoginModel.Password)"
          RequiredError="Error" OnAdornmentClick="@TogglePasswordVisibility">
        </MudTextField>
        <div>
          <MudText class="mt-4 " hidden="@ForogotPasswordVisible" Typo="Typo.h6" Color="Color.Error">
            @Lang.GetText(TextEnum.ForgotPassword)
            <MudLink Href="/forgot-password">@Lang.GetText(TextEnum.Remind)</MudLink>
          </MudText>
        </div>
      </MudForm>
      <div class="d-flex flex-column">
        <MudButton Variant="Variant.Filled" OnClick="@Login" Color="Color.Primary" Class="mt-4"
          ButtonType="ButtonType.Button">
          @Lang.GetText(TextEnum.LogIn)

        </MudButton>

        <MudLink class="mt-4" Href="SignUp"> @Lang.GetText(TextEnum.DontHaveAccountSignIn) </MudLink>
      </div>
    </MudCardContent>
    <MudCardActions>

    </MudCardActions>

  </MudCard>

</MudContainer>
